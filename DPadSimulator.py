#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Mon Mar 13 01:22:41 2017
#

'''
控制键
键名 描述 键值
KEYCODE_ENTER 回车键66
KEYCODE_ESCAPE ESC键111
KEYCODE_DPAD_CENTER 导航键 确定键23
KEYCODE_DPAD_UP 导航键 向上19
KEYCODE_DPAD_DOWN 导航键 向下20
KEYCODE_DPAD_LEFT 导航键 向左21
KEYCODE_DPAD_RIGHT 导航键 向右22
KEYCODE_MOVE_HOME 光标移动到开始键122
KEYCODE_MOVE_END 光标移动到末尾键123
KEYCODE_PAGE_UP 向上翻页键92
KEYCODE_PAGE_DOWN 向下翻页键93
KEYCODE_DEL 退格键67
KEYCODE_FORWARD_DEL 删除键112
KEYCODE_INSERT 插入键124
KEYCODE_TAB Tab键61
KEYCODE_NUM_LOCK 小键盘锁143
KEYCODE_CAPS_LOCK 大写锁定键115
KEYCODE_BREAK Break/Pause键121
KEYCODE_SCROLL_LOCK 滚动锁定键116
KEYCODE_ZOOM_IN 放大键168
KEYCODE_ZOOM_OUT 缩小键169

多媒体键
键名 描述
KEYCODE_MEDIA_PLAY 多媒体键 播放
KEYCODE_MEDIA_STOP 多媒体键 停止
KEYCODE_MEDIA_PAUSE 多媒体键 暂停
KEYCODE_MEDIA_PLAY_PAUSE 多媒体键 播放/暂停
KEYCODE_MEDIA_FAST_FORWARD 多媒体键 快进
KEYCODE_MEDIA_REWIND 多媒体键 快退
KEYCODE_MEDIA_NEXT 多媒体键 下一首
KEYCODE_MEDIA_PREVIOUS 多媒体键 上一首
KEYCODE_MEDIA_CLOSE 多媒体键 关闭
KEYCODE_MEDIA_EJECT 多媒体键 弹出
KEYCODE_MEDIA_RECORD 多媒体键 录音
KEYCODE_MEDIA_AUDIO_TRACK

Constant Value: 222 (0x000000de)

KEYCODE_MEDIA_CLOSE

Constant Value: 128 (0x00000080)

KEYCODE_MEDIA_EJECT

Constant Value: 129 (0x00000081)

KEYCODE_MEDIA_FAST_FORWARD

Constant Value: 90 (0x0000005a)

KEYCODE_MEDIA_NEXT

Constant Value: 87 (0x00000057)

KEYCODE_MEDIA_PAUSE

Constant Value: 127 (0x0000007f)

KEYCODE_MEDIA_PLAY

Constant Value: 126 (0x0000007e)

KEYCODE_MEDIA_PLAY_PAUSE

Constant Value: 85 (0x00000055)

KEYCODE_MEDIA_PREVIOUS

Constant Value: 88 (0x00000058)

KEYCODE_MEDIA_RECORD

Key code constant: Record media key.

Constant Value: 130 (0x00000082)

KEYCODE_MEDIA_REWIND

Constant Value: 89 (0x00000059)


'''

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

import os


def sendEvent(keycode):
    retcode = os.system("adb shell input keyevent "+keycode)


class DPadSimulator(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: DPadSimulator.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("^"))
        self.button_2 = wx.Button(self, wx.ID_ANY, _("<"))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("0"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _(">"))
        self.button_5 = wx.Button(self, wx.ID_ANY, _("v"))
        self.button_6 = wx.Button(self, wx.ID_ANY, _("<<"))
        self.button_7 = wx.Button(self, wx.ID_ANY, _("||"))
        self.button_8 = wx.Button(self, wx.ID_ANY, _(">>"))
        self.button_9 = wx.Button(self, wx.ID_ANY, _("BACK"))
        self.button_10 = wx.Button(self, wx.ID_ANY, _("HOME"))
        self.button_11 = wx.Button(self, wx.ID_ANY, _("MENU"))
        self.button_1.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_2.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_3.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_4.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_5.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_6.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_7.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_8.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_9.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_10.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )
        self.button_11.Bind( wx.EVT_BUTTON, self.m_OnButtonClick )


        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: DPadSimulator.__set_properties
        self.SetTitle(_("frame_1"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DPadSimulator.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(5, 4, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.button_2, 0, 0, 0)
        grid_sizer_1.Add(self.button_3, 0, 0, 0)
        grid_sizer_1.Add(self.button_4, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.button_5, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.button_6, 0, 0, 0)
        grid_sizer_1.Add(self.button_7, 0, 0, 0)
        grid_sizer_1.Add(self.button_8, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.button_9, 0, 0, 0)
        grid_sizer_1.Add(self.button_10, 0, 0, 0)
        grid_sizer_1.Add(self.button_11, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
    def m_OnButtonClick( self, event ):
        if self.button_1 == event.GetEventObject():
            sendEvent("19")
        if self.button_2 == event.GetEventObject():
            sendEvent("21")
        if self.button_3 == event.GetEventObject():
            sendEvent("23")
        if self.button_4 == event.GetEventObject():
            sendEvent("22")
        if self.button_5 == event.GetEventObject():
            sendEvent("20")
        if self.button_6 == event.GetEventObject():
            sendEvent("88")
        if self.button_7 == event.GetEventObject():
            sendEvent("85")
        if self.button_8 == event.GetEventObject():
            sendEvent("87")
        if self.button_9 == event.GetEventObject():
            sendEvent("4")
        if self.button_10 == event.GetEventObject():
            sendEvent("3")
        if self.button_11 == event.GetEventObject():
            sendEvent("82")
        

# end of class DPadSimulator
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name
    
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = DPadSimulator(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()